// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxManager.Infra.Data;

namespace TaxManager.Infra.Data.Migrations
{
    [DbContext(typeof(TaxManagerContext))]
    [Migration("20201208103718_TimeSpanTest")]
    partial class TimeSpanTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TaxManager.Core.Entities.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("DailyTaxRate")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyTaxRate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WeeklyTaxRate")
                        .HasColumnType("float");

                    b.Property<double>("YearlyTaxRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("TaxManager.Core.Entities.TaxSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaxType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("TaxManager.Core.Entities.TaxSchedule", b =>
                {
                    b.HasOne("TaxManager.Core.Entities.Municipality", "Municipality")
                        .WithMany("TaxSchedules")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("TaxManager.Core.Entities.Municipality", b =>
                {
                    b.Navigation("TaxSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
